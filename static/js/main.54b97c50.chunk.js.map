{"version":3,"sources":["Side.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Side","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","className","onClick","map","i","id","title","body","e","substr","Date","toLocaleDateString","hour","minute","Main","onUpdateNote","onEditField","field","value","now","type","placeholder","onChange","target","autoFocus","App","useState","localStorage","JSON","parse","setNotes","useEffect","setItem","stringify","newNote","uuid","noteId","filter","find","updatedNote","updatedNotes","note","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54b97c50.chunk.js","sourcesContent":["const Side = ({\r\n    notes,\r\n    onAddNote,\r\n    onDeleteNote,\r\n    activeNote,\r\n    setActiveNote,\r\n  }) => {\r\n    const sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\r\n  \r\n    return (\r\n      <div className=\"app-sidebar\">\r\n        <div className=\"app-sidebar-header\">\r\n          <h1>Notes</h1>\r\n          <button onClick={onAddNote}>Add</button>\r\n        </div>\r\n        <div className=\"app-sidebar-notes\">\r\n          {sortedNotes.map(({ id, title, body, lastModified }, i) => (\r\n            <div\r\n              className={`app-sidebar-note ${id === activeNote && \"active\"}`}\r\n              onClick={() => setActiveNote(id)}\r\n            >\r\n              <div className=\"sidebar-note-title\">\r\n                <strong>{title}</strong>\r\n                <button onClick={(e) => onDeleteNote(id)}>Delete</button>\r\n              </div>\r\n  \r\n              <p>{body && body.substr(0, 100) + \"...\"}</p>\r\n              <small className=\"note-meta\">\r\n                Last Modified{\" \"}\r\n                {new Date(lastModified).toLocaleDateString(\"en-GB\", {\r\n                  hour: \"2-digit\",\r\n                  minute: \"2-digit\",\r\n                })}\r\n              </small>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Side;","function Main({ activeNote, onUpdateNote }) {\r\n\r\n\r\n\r\n    const onEditField = (field, value) => {\r\n        onUpdateNote({\r\n            ...activeNote,\r\n            [field]: value,\r\n            lastModified: Date.now(),\r\n        });\r\n    };\r\n\r\n    if (!activeNote) return <div className=\"no-active-note\">No Active Note</div>;\r\n    return (\r\n        <div className=\"app-main\">\r\n            <div className=\"app-main-note-edit\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"title\"\r\n                    placeholder=\"Note Title\"\r\n                    value={activeNote.title}\r\n                    onChange={(e) => onEditField(\"title\", e.target.value)}\r\n                    autoFocus\r\n                />\r\n                <textarea\r\n                    id=\"body\"\r\n                    placeholder=\"Write your note here...\"\r\n                    value={activeNote.body}\r\n                    onChange={(e) => onEditField(\"body\", e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"app-main-note-preview\">\r\n                <h1 className=\"preview-title\">{activeNote.title}</h1>\r\n                <div className=\"markdown-preview\">\r\n                    {activeNote.body}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","import { useState,useEffect } from 'react';\nimport './App.css';\nimport uuid from 'react-uuid';\nimport Side from './Side';\nimport Main from './Main';\nfunction App() {\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now(),\n    };\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = (noteId) => {\n    setNotes(notes.filter(({ id }) => id !== noteId));\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotes = notes.map((note) => {\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n\n    setNotes(updatedNotes);\n  };\n\n  const getActiveNote = () => {\n    return notes.find(({ id }) => id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Side\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n      />\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}